name: C++ MPI Matrix Multiplication CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:  # Aggiunta dei permessi necessari per tutte le operazioni nel workflow
  contents: write
  actions: write
  pull-requests: write
  issues: write
  discussions: write
  packages: write
  deployments: write
  repository-projects: write
  security-events: write
  statuses: write
  releases: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y mpich libgtest-dev cmake

      - name: Setup MPI
        uses: mpi4py/setup-mpi@v1

      - name: Compile and Build Google Test
        run: |
          sudo mkdir -p /usr/local/gtest
          sudo cp -r /usr/src/gtest/* /usr/local/gtest
          cd /usr/local/gtest
          sudo cmake CMakeLists.txt -DBUILD_SHARED_LIBS=ON
          sudo make
          sudo cp /usr/local/gtest/lib/*.so /usr/lib

      - name: Configure and Build Project
        run: |
          mkdir build
          cd build
          cmake .. -DGTEST_LIBRARY=/usr/lib/libgtest.so -DGTEST_MAIN
          make

      - name: Run Tests
        run: |
          cd build
          ./test_multiplication

  release:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_id }}  # Genera un tag basato sull'ID esecuzione del run
          release_name: Release ${{ github.run_id }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/test_multiplication
          asset_name: test_multiplication
          asset_content_type: application/octet-stream